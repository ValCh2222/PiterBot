import telebot
import emoji
from database import *
from config import *
from wheather import *
from yandex_organizations_info import *
from kudago_info import *
from psycopg2 import Error
from telebot import types

# owm(open wheather map) KEY: b811b03b45c576c95ef39b89c1742e13
# aviasales KEY : cb614ccdbe22289b22511e54c8e02fc9
bot = telebot.TeleBot('5687900058:AAGmBIKKIDAFfLyV0i6IVKP58XVZM2hXerg')
text_info = '–î–∞–Ω–Ω—ã–π –±–æ—Ç –ø–æ–∑–≤–æ–ª–∏—Ç –í–∞–º –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º–∏ –º–µ—Å—Ç–∞–º–∏ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–∞ !\n\n'


# –ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ , –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã
@bot.message_handler(commands=['start'])  # –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã
def get_user_photo(message):
    message_text = '–ü—Ä–∏–≤–µ—Ç, *' + str(message.chat.first_name) + '*!\n'
    message_text += text_info
    markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    weather = types.KeyboardButton(
        emoji.emojize('–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –≤ –ü–∏—Ç–µ—Ä–µ :sun:'))  # –∫–Ω–æ–ø–∫–∏ –≤ —Å–∞–º–æ–π –ø–∞–Ω–µ–ª–∏, –Ω–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏—è
    start = types.KeyboardButton('/start')  # –∫–Ω–æ–ø–∫–∏ –≤ —Å–∞–º–æ–π –ø–∞–Ω–µ–ª–∏, –Ω–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏—è
    where_to_go = types.KeyboardButton(emoji.emojize('–∫—É–¥–∞ —Å—Ö–æ–¥–∏—Ç—å? :classical_building:'))
    where_to_stay = types.KeyboardButton(emoji.emojize('–≥–¥–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è? :hotel:'))
    where_to_eat = types.KeyboardButton(emoji.emojize('–≥–¥–µ –ø–æ–µ—Å—Ç—å? :pot_of_food:'))
    metro = types.KeyboardButton(emoji.emojize('—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç :bus:'))
    where_to_shop = types.KeyboardButton(emoji.emojize('—Ç–æ—Ä–≥–æ–≤—ã–µ —Ü–µ–Ω—Ç—Ä—ã:shopping_bags:'))
    airplane = types.KeyboardButton(emoji.emojize('–∞–≤–∏–∞–±–∏–ª–µ—Ç—ã:airplane:'))
    free_search = types.KeyboardButton('—Å–≤–æ–±–æ–¥–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º')
    favourites = types.KeyboardButton('–∏–∑–±—Ä–∞–Ω–Ω–æ–µ')
    markup1.add(weather, where_to_stay, where_to_go, where_to_eat, where_to_shop, metro, airplane, free_search,
                favourites, start)
    bot.send_message(message.chat.id, message_text, reply_markup=markup1)


# –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.message_handler(content_types=['text'])
def get_user_message(user_message):
    if user_message.text == "hello":
        mess = f'hello, {user_message.from_user.first_name} , my dear'  # –∑–¥o—Ä–æ–≤–∞–µ–º—Å—è
        bot.send_message(user_message.chat.id, mess, parse_mode='html')
    # —Ç—Ä–∞—Å–ø–æ—Ä—Ç
    elif user_message.text == emoji.emojize('—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç :bus:'):
        markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        metro = types.KeyboardButton(emoji.emojize('–ú–µ—Ç—Ä–æ :metro:'))
        trolleibus = types.KeyboardButton(emoji.emojize('–¢—Ä–æ–ª–ª–µ–π–±—É—Å—ã üöé'))
        bus = types.KeyboardButton(emoji.emojize('–¢—Ä–∞–º–≤–∞–∏ :tram:'))
        tarif = types.KeyboardButton('–¢–∞—Ä–∏—Ñ—ã')
        card = types.KeyboardButton('–ü–æ–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ–µ–∑–¥–Ω–æ–π')
        back = types.KeyboardButton('–≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup1.add(metro, trolleibus, bus, tarif, card, back)
        bot.send_message(user_message.chat.id, "–≤—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç", reply_markup=markup1)
    elif user_message.text == emoji.emojize('–¢—Ä–æ–ª–ª–µ–π–±—É—Å—ã üöé'):
        bot.send_photo(user_message.chat.id, "https://transphoto.org/photo/08/83/99/883994.png")
    elif user_message.text == emoji.emojize('–¢—Ä–∞–º–≤–∞–∏ :tram:'):
        bot.send_photo(user_message.chat.id, "https://transphoto.org/photo/12/56/49/1256499.png?1")
    elif user_message.text == emoji.emojize('–ú–µ—Ç—Ä–æ :metro:'):
        markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        scheme = types.KeyboardButton('–°—Ö–µ–º–∞ –º–µ—Ç—Ä–æ')  # –∫–Ω–æ–ø–∫–∏ –≤ —Å–∞–º–æ–π –ø–∞–Ω–µ–ª–∏, –Ω–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏—è
        time = types.KeyboardButton('–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã —Å—Ç–∞–Ω—Ü–∏–π')  # –∫–Ω–æ–ø–∫–∏ –≤ —Å–∞–º–æ–π –ø–∞–Ω–µ–ª–∏, –Ω–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏—è
        transport = types.KeyboardButton(emoji.emojize('—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç :bus:'))
        back = types.KeyboardButton('–≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup1.add(scheme, time, transport, back)
        bot.send_message(user_message.chat.id, "–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é –º–µ—Ç—Ä–æ", reply_markup=markup1)
    elif user_message.text == emoji.emojize('–°—Ö–µ–º–∞ –º–µ—Ç—Ä–æ'):
        photo = open('photos/metro.jpg', 'rb')
        bot.send_photo(user_message.chat.id, photo)  # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
    elif user_message.text == emoji.emojize('–¢–∞—Ä–∏—Ñ—ã'):
        bot.send_photo(user_message.chat.id, 'http://www.metro.spb.ru/uploads/tarif2022_1.jpg')  # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
    elif user_message.text == emoji.emojize('–ü–æ–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ–µ–∑–¥–Ω–æ–π'):
        text = '[–ø–æ–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ–µ–∑–¥–Ω–æ–π](http://www.metro.spb.ru/bzoplata.html?ysclid=l88hx9ekrf653992473)'
        bot.send_message(user_message.chat.id, text, parse_mode='MarkdownV2')
    elif user_message.text == emoji.emojize('–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã —Å—Ç–∞–Ω—Ü–∏–π'):
        text = '[—Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã —Å—Ç–∞–Ω—Ü–∏–π](http://www.metro.spb.ru/rejimrabotystancii.html?ysclid=l81yz39056997330556)'
        bot.send_message(user_message.chat.id, text, parse_mode='MarkdownV2')
    # –∫—É–¥–∞ —Å—Ö–æ–¥–∏—Ç—å
    elif user_message.text == emoji.emojize('–∫—É–¥–∞ —Å—Ö–æ–¥–∏—Ç—å? :classical_building:'):
        markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        sobory = types.KeyboardButton(emoji.emojize('—Å–æ–±–æ—Ä—ã :church:'))
        museums = types.KeyboardButton(
            emoji.emojize('–º—É–∑–µ–∏ :classical_building:'))  # –∫–Ω–æ–ø–∫–∏ –≤ —Å–∞–º–æ–π –ø–∞–Ω–µ–ª–∏, –Ω–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏—è
        parks = types.KeyboardButton(emoji.emojize('–ø–∞—Ä–∫–∏ :national_park:'))
        skulptures = types.KeyboardButton(emoji.emojize('–ø–∞–º—è—Ç–Ω–∏–∫–∏ :fountain:'))
        bridges = types.KeyboardButton(emoji.emojize('–º–æ—Å—Ç—ã :bridge_at_night:'))
        cinema = types.KeyboardButton(emoji.emojize('–∫–∏–Ω–æ :cinema:'))
        map_of_places = types.KeyboardButton(emoji.emojize('–∫–∞—Ä—Ç–∞ –º–µ—Å—Ç :round_pushpin:'))
        back = types.KeyboardButton('–≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup1.add(sobory, museums, parks, skulptures, bridges, map_of_places, cinema, back)
        bot.send_message(user_message.chat.id, "–≤—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é –∫—É–¥–∞ —Å—Ö–æ–¥–∏—Ç—å", reply_markup=markup1)
    elif user_message.text == emoji.emojize('–∫–∞—Ä—Ç–∞ –º–µ—Å—Ç :round_pushpin:'):
        text = '[–∫–∞—Ä—Ç–∞ –º–µ—Å—Ç](https://yandex.ru/maps/2/saint-petersburg/category/landmark_attraction' \
               '/89683368508/?ll=30.433514%2C59.899008&sll=30.433514%2C59.898920&z=11)'
        bot.send_message(user_message.chat.id, text, parse_mode='MarkdownV2')

    elif user_message.text in ["–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –ù–µ–≤—Å–∫–æ–≥–æ", "–ë–∏—Ä–∂–µ–≤–æ–π", "–ë–ª–∞–≥–æ–≤–µ—â–µ–Ω—Å–∫–∏–π", "–ë–æ–ª—å—à–µ–æ—Ö—Ç–∏–Ω—Å–∫–∏–π", "–í–æ–ª–æ–¥–∞—Ä—Å–∫–∏–π",
                               "–î–≤–æ—Ä—Ü–æ–≤—ã–π", "–õ–∏—Ç–µ–π–Ω—ã–π", "–¢—Ä–æ–∏—Ü–∫–∏–π", "–¢—É—á–∫–æ–≤"]:
        try:
            link = bridge_inf(user_message.text)
            bot.send_photo(user_message.chat.id, link, user_message.text)
        except (Exception, Error) as error:
            print("Error", error)
    # –º–æ—Å—Ç—ã
    elif user_message.text == emoji.emojize('–º–æ—Å—Ç—ã :bridge_at_night:'):
        bridgesmas = ["–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –ù–µ–≤—Å–∫–æ–≥–æ", "–ë–∏—Ä–∂–µ–≤–æ–π", "–ë–ª–∞–≥–æ–≤–µ—â–µ–Ω—Å–∫–∏–π", "–ë–æ–ª—å—à–µ–æ—Ö—Ç–∏–Ω—Å–∫–∏–π", "–í–æ–ª–æ–¥–∞—Ä—Å–∫–∏–π",
                      "–î–≤–æ—Ä—Ü–æ–≤—ã–π", "–õ–∏—Ç–µ–π–Ω—ã–π", "–¢—Ä–æ–∏—Ü–∫–∏–π", "–¢—É—á–∫–æ–≤"]
        markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        for bridge in bridgesmas:
            bridge = types.KeyboardButton(bridge)
            markup1.add(bridge)
        bridges = types.KeyboardButton('–≥—Ä–∞—Ñ–∏–∫ —Ä–∞–∑–≤–µ–¥–µ–Ω–∏—è –º–æ—Å—Ç–æ–≤')
        where_to_go = types.KeyboardButton(emoji.emojize('–∫—É–¥–∞ —Å—Ö–æ–¥–∏—Ç—å? :classical_building:'))
        back = types.KeyboardButton('–≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup1.add(bridges, where_to_go, back)
        bot.send_message(user_message.chat.id, "–≤—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é –º–æ—Å—Ç—ã", reply_markup=markup1)
    elif user_message.text == "–≥—Ä–∞—Ñ–∏–∫ —Ä–∞–∑–≤–µ–¥–µ–Ω–∏—è –º–æ—Å—Ç–æ–≤":
        bot.send_photo(user_message.chat.id,
                       "https://peterburg.center/sites/default/files/styles/long_image/public/razvod-mostov-2021.png"
                       "?itok=dAKCuKUT")
    # –∫–∏–Ω–æ
    elif user_message.text == emoji.emojize('–∫–∏–Ω–æ :cinema:'):
        url_place = " https://kudago.com/public-api/v1.4/places/?lang=&fields" \
                    "=&expand=&order_by=&text_format=&ids=&location=spb&has_showings=&showing_since=" \
                    "1444385206&showing_until=1444385206&categories=cinema&lon=&lat=&radius="
        text = send_info_about_places(url_place)
        bot.send_message(user_message.chat.id, text)
    # —Å–æ–±–æ—Ä—ã
    elif user_message.text == emoji.emojize('—Å–æ–±–æ—Ä—ã :church:'):

        markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        for i in churches:
            church = types.KeyboardButton(i)
            markup1.add(church)
        back = types.KeyboardButton('–≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        where_to_go = types.KeyboardButton(emoji.emojize('–∫—É–¥–∞ —Å—Ö–æ–¥–∏—Ç—å? :classical_building:'))
        markup1.add(where_to_go, back)
        bot.send_message(user_message.chat.id, "–≤—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é —Å–æ–±–æ—Ä—ã", reply_markup=markup1)
    # –ø–∞—Ä–∫–∏
    elif user_message.text == emoji.emojize('–ø–∞—Ä–∫–∏ :national_park:'):
        markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        parks = ["–ú–∞—Ä—Å–æ–≤–æ –ø–æ–ª–µ", "–ü–µ—Ç–µ—Ä–≥–æ—Ñ",
                 "–ï–∫–∞—Ç–µ—Ä–∏–Ω–∏–Ω—Å–∫–∏–π –ø–∞—Ä–∫", "–ü–∞—Ä–∫ –Ω–∞ –ï–ª–∞–≥–∏–Ω–æ–º –æ—Å—Ç—Ä–æ–≤–µ", "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤—Å–∫–∏–π –ø–∞—Ä–∫", "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤—Å–∫–∏–π —Å–∞–¥",
                 "–õ–µ—Ç–Ω–∏–π —Å–∞–¥", "–ü–∞—Ä–∫ 300-–ª–µ—Ç–∏—è –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–∞", "–ú–æ—Å–∫–æ–≤—Å–∫–∏–π –ü–∞—Ä–∫ –ü–æ–±–µ–¥—ã", "–û—Ö—Ç–∞ –ü–∞—Ä–∫",
                 "–õ–∞–ø–ª–∞–Ω–¥–∏—è –ü–∞—Ä–∫", "–ú–∏—Ö–∞–π–ª–æ–≤—Å–∫–∏–π —Å–∞–¥", "–ù–æ–≤–∞—è –ì–æ–ª–ª–∞–Ω–¥–∏—è",
                 "–ü–∞—Ä–∫ –î—É–±–∫–∏", "–ê–Ω–¥–µ—Ä—Å–µ–Ω–≥—Ä–∞–¥", "–¢–∞–≤—Ä–∏—á–µ—Å–∫–∏–π —Å–∞–¥", "–ü—Ä–∏–º–æ—Ä—Å–∫–∏–π –ø–∞—Ä–∫ –ü–æ–±–µ–¥—ã", "–ú—É–∑–µ–π-—É—Å–∞–¥—å–±–∞ –î–µ—Ä–∂–∞–≤–∏–Ω–∞",
                 "–°–∞–¥ 9 —è–Ω–≤–∞—Ä—è", "–ú—É—Ä–∏–Ω—Å–∫–∏–π –ø–∞—Ä–∫"]

        for i in parks:
            park = types.KeyboardButton(i)
            markup1.add(park)
        back = types.KeyboardButton('–≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        where_to_go = types.KeyboardButton(emoji.emojize('–∫—É–¥–∞ —Å—Ö–æ–¥–∏—Ç—å? :classical_building:'))
        markup1.add(where_to_go, back)
        bot.send_message(user_message.chat.id, "–≤—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é –ø–∞—Ä–∫–∏", reply_markup=markup1)
    # –º—É–∑–µ–∏
    elif user_message.text == emoji.emojize('–º—É–∑–µ–∏ :classical_building:'):

        text = '[–º—É–∑–µ–∏](https://www.culture.ru/museums/institutes/location-sankt-peterburg?ysclid=l891xtiuj7335039208)'
        bot.send_message(user_message.chat.id, text, parse_mode='MarkdownV2')
    # –ø–∞–º—è—Ç–Ω–∏–∫–∏
    elif user_message.text == emoji.emojize('–ø–∞–º—è—Ç–Ω–∏–∫–∏ :fountain:'):
        text = '[–ø–∞–º—è—Ç–Ω–∏–∫–∏](https://peterburg.center/category/pamyatniki?ysclid=l8a1uhdnii583269947)'
        bot.send_message(user_message.chat.id, text, parse_mode='MarkdownV2')
    # –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    elif user_message.text == "–≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        weather = types.KeyboardButton(emoji.emojize('–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –≤ –ü–∏—Ç–µ—Ä–µ :sun:'))
        start = types.KeyboardButton('/start')  # –∫–Ω–æ–ø–∫–∏ –≤ —Å–∞–º–æ–π –ø–∞–Ω–µ–ª–∏, –Ω–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏—è
        where_to_go = types.KeyboardButton(emoji.emojize('–∫—É–¥–∞ —Å—Ö–æ–¥–∏—Ç—å? :classical_building:'))
        where_to_stay = types.KeyboardButton(emoji.emojize('–≥–¥–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è? :hotel:'))
        where_to_eat = types.KeyboardButton(emoji.emojize('–≥–¥–µ –ø–æ–µ—Å—Ç—å? :pot_of_food:'))
        where_to_shop = types.KeyboardButton(emoji.emojize('—Ç–æ—Ä–≥–æ–≤—ã–µ —Ü–µ–Ω—Ç—Ä—ã:shopping_bags:'))
        metro = types.KeyboardButton(emoji.emojize('—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç :bus:'))
        airplane = types.KeyboardButton(emoji.emojize('–∞–≤–∏–∞–±–∏–ª–µ—Ç—ã:airplane:'))
        free_search = types.KeyboardButton('—Å–≤–æ–±–æ–¥–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º')
        favourites = types.KeyboardButton('–∏–∑–±—Ä–∞–Ω–Ω–æ–µ')
        markup1.add(weather, where_to_stay, where_to_go, where_to_eat, where_to_shop, metro, airplane, free_search,
                    favourites,
                    start)
        bot.send_message(user_message.chat.id, "–≤—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup1)
    # –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
    elif user_message.text == "–∏–∑–±—Ä–∞–Ω–Ω–æ–µ":
        markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        show = types.KeyboardButton(emoji.emojize('–≤—ã–≤–µ—Å—Ç–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ'))
        clear = types.KeyboardButton('–æ—á–∏—Å—Ç–∏—Ç—å –∏–∑–±—Ä–∞–Ω–Ω–æ–µ')
        back = types.KeyboardButton('–≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup1.add(show, clear, back)
        bot.send_message(user_message.chat.id, "–≤—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é –∏–∑–±—Ä–∞–Ω–Ω–æ–µ ", reply_markup=markup1)

    elif user_message.text == "–≤—ã–≤–µ—Å—Ç–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ":
        text = show_favourites(user_message.chat.id)
        bot.send_message(user_message.chat.id, text)

    elif user_message.text == "–æ—á–∏—Å—Ç–∏—Ç—å –∏–∑–±—Ä–∞–Ω–Ω–æ–µ":
        clear_favourites(user_message.chat.id)
        bot.send_message(user_message.chat.id, "–≤–∞—à —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –æ—á–∏—â–µ–Ω")
    # —Å–≤–æ–±–æ–¥–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º
    elif user_message.text == "—Å–≤–æ–±–æ–¥–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º":
        bot.send_message(user_message.chat.id, text="–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –≤–∞—Å –û–†–ì–ê–ù–ò–ó–ê–¶–ò–Æ "
                                                    "–≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ, –≤–≤–µ–¥—è –∑–∞–ø—Ä–æ—Å , –Ω–∞—á–∏–Ω–∞—é—â–∏–π—Å—è —Å–æ"
                                                    " —Å–ª–æ–≤–∞ –ù–ê–ô–î–ò\n –ø—Ä–∏–º–µ—Ä : –ù–∞–π–¥–∏ –í–∫—É—Å–Ω–æ - –∏ –¢–æ—á–∫–∞ ")
        markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        fav = types.KeyboardButton('–¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ')
        back = types.KeyboardButton('–≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup1.add(fav, back)
        bot.send_message(user_message.chat.id, "–≤—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é —Å–≤–æ–±–æ–¥–Ω—ã–π –ø–æ–∏—Å–∫ ", reply_markup=markup1)
    elif user_message.text.lower().find("–Ω–∞–π–¥–∏") != -1:
        organization = user_message.text[user_message.text.find('–∏', 1): len(user_message.text)]
        text = get_info_about_organizations(organization)
        bot.send_message(user_message.chat.id, text)
        write_info_to_file(text)

    # –∞–≤–∏–∞–±–∏–ª–µ—Ç—ã
    elif user_message.text == emoji.emojize("–∞–≤–∏–∞–±–∏–ª–µ—Ç—ã:airplane:"):
        bot.send_message(user_message.chat.id, '''–í–≤–µ–¥–∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –≥–æ—Ä–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –≥–æ—Ä–æ–¥ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∏ –¥–∞—Ç—É –≤—ã–ª–µ—Ç–∞, 
        –Ω–∞–ø—Ä–∏–º–µ—Ä :–ú–æ—Å–∫–≤–∞ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥ 2022-12-31''')

    elif user_message.text.find(" ") != -1 and user_message.text.find("2") != -1:
        try:
            t = user_message.text.split()
            aviasales_token = "cb614ccdbe22289b22511e54c8e02fc9"
            information = get_info_flight(user_message.text)
            origin = information[0]
            destination = information[1]
            departure_at = information[2]

            url = f'''https://api.travelpayouts.com/aviasales/v3/prices_for_dates?origin={origin}&destination={destination}&
            currency=rub&departure_at={departure_at}&
                    return_at={departure_at}&sorting=price&direct=true&limit=10&token={aviasales_token}'''

            response = requests.get(url)
            info = json.loads(response.text)
            price = info["data"][0]["price"]
            link = "https://www.aviasales.ru" + str(info["data"][0]["link"])
            text = f"–±–∏–ª–µ—Ç—ã  {t[0]} --{t[1]} –æ—Ç {price} —Ä—É–±–ª–µ–π –Ω–∞ –¥–∞—Ç—É: {departure_at} "
            keyboard = types.InlineKeyboardMarkup()
            url_button = types.InlineKeyboardButton(text="–ø–æ–¥—Ä–æ–±–Ω–µ–µ", url=link)
            keyboard.add(url_button)
            bot.send_message(user_message.chat.id, text, reply_markup=keyboard)

        except Exception:
            bot.send_message(user_message.chat.id, "–Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∞–≤–∏–∞–±–∏–ª–µ—Ç—ã –ø–æ —É–∫–∞–∑–∞–Ω–Ω—ã–º –¥–∞–Ω–Ω—ã–º")

    elif user_message.text == "info":
        bot.send_message(user_message.chat.id, "–∏—Å–ø–æ–ª—å–∑—É–π –º–µ–Ω—é, –∏–ª–∏ –Ω–∞–ø–∏—à–∏ /start , —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É",
                         parse_mode='html')
    # –≥–¥–µ –ø–æ–µ—Å—Ç—å
    elif user_message.text == emoji.emojize('–≥–¥–µ –ø–æ–µ—Å—Ç—å? :pot_of_food:'):
        markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        restaurants = types.KeyboardButton(emoji.emojize('—Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã ü•ò'))
        fastfood = types.KeyboardButton(emoji.emojize('—Ñ–∞—Å—Ç—Ñ—É–¥ :hamburger:'))
        national_kitchen = types.KeyboardButton(emoji.emojize('–∞–∑–∏–∞—Ç—Å–∫–∞—è –∫—É—Ö–Ω—è üç±'))
        kafe = types.KeyboardButton(emoji.emojize('–∫–∞—Ñ–µ :doughnut:'))
        back = types.KeyboardButton('–≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup1.add(restaurants, fastfood, national_kitchen, kafe, back)
        bot.send_message(user_message.chat.id, "–≤—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é –≥–¥–µ –ø–æ–µ—Å—Ç—å\n –í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∑–∞–≤–µ–¥–µ–Ω–∏—è, –∏ –±–æ—Ç "
                                               "–ø–æ—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç —Ç–µ–±–µ –º–µ—Å—Ç–æ", reply_markup=markup1)
    # –ø–æ–≥–æ–¥–∞- –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã
    elif user_message.text == emoji.emojize('–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –≤ –ü–∏—Ç–µ—Ä–µ :sun:'):
        get_weather()
        my_file = open("BabyFile.txt", "r")
        prognos = my_file.read()
        bot.send_message(user_message.chat.id, prognos)
    # –≥–¥–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è
    elif user_message.text == emoji.emojize('–≥–¥–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è? :hotel:'):
        markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        hotel = types.KeyboardButton(emoji.emojize('–æ—Ç–µ–ª–∏ :hotel:'))
        hostel = types.KeyboardButton(emoji.emojize('—Ö–æ—Å—Ç–µ–ª—ã :bed:'))
        arend = types.KeyboardButton(emoji.emojize('–∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å –∂–∏–ª—å—ë :house:'))
        back = types.KeyboardButton('–≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup1.add(hotel, hostel, arend, back)
        bot.send_message(user_message.chat.id,
                         "–≤—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é –≥–¥–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è \n –í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∑–∞–≤–µ–¥–µ–Ω–∏—è, –∏ –±–æ—Ç "
                         "–ø–æ—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç —Ç–µ–±–µ –º–µ—Å—Ç–æ", reply_markup=markup1)
    #–∞—Ä–µ–Ω–¥–∞ –∂–∏–ª—å—è
    elif user_message.text == emoji.emojize('–∞—Ä–µ–Ω–¥–æ–≤–∞—Ç—å –∂–∏–ª—å—ë :house:'):
        text = '[–Ø–Ω–¥–µ–∫—Å –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å](https://realty.yandex.ru/sankt-' \
               'peterburg_i_leningradskaya_oblast/snyat/' \
               'kvartira/?sort=CONFIDENCE&utm_source=yandex_direct&utm' \
               '_medium=direct_rent&utm_content=11683953411_' \
               '37229677859&utm_campaign=460_67992971_poisk_tgo_rent_spb' \
               '_poisk&ad_source=arenda_tenant&_openstat=ZGlyZWN' \
               '0LnlhbmRleC5ydTs2Nzk5Mjk3MTsxMTY4Mzk1MzQxMTt5YW5kZXgucnU6' \
               'cHJlbWl1bQ&yclid=109208318119247871)' + '\n'
        bot.send_message(user_message.chat.id, text, parse_mode='MarkdownV2')
    #–º–µ–Ω—é –æ—Ç–µ–ª–∏
    elif user_message.text == emoji.emojize('–æ—Ç–µ–ª–∏ :hotel:'):
        markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        hotel = types.KeyboardButton(emoji.emojize('–≤—ã–≤–µ—Å—Ç–∏ –æ—Ç–µ–ª—å'))
        change = types.KeyboardButton(emoji.emojize('–∑–∞–º–µ–Ω–∏—Ç—å –æ—Ç–µ–ª—å'))
        add_fav = types.KeyboardButton(emoji.emojize('–¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ'))
        back = types.KeyboardButton('–≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        where_to_stay = types.KeyboardButton(emoji.emojize('–≥–¥–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è? :hotel:'))
        markup1.add(hotel, change, add_fav, where_to_stay, back)
        bot.send_message(user_message.chat.id,
                         "–≤—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é –æ—Ç–µ–ª–∏", reply_markup=markup1)
    elif user_message.text == "–≤—ã–≤–µ—Å—Ç–∏ –æ—Ç–µ–ª—å":
        text = get_info_about_organizations("–≤—ã–≤–µ—Å—Ç–∏ –æ—Ç–µ–ª—å")
        bot.send_message(user_message.chat.id, text)
        write_info_to_file(text)
    elif user_message.text == "–¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ":
        my_file = open("mes.txt", "r")
        information = my_file.read()
        add_favourites(user_message.chat.id, information)
        bot.send_message(user_message.chat.id, text="–¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ")
    elif user_message.text == "–∑–∞–º–µ–Ω–∏—Ç—å –æ—Ç–µ–ª—å":
        bot.delete_message(user_message.chat.id, user_message.message_id - 1)
        bot.send_message(user_message.chat.id, text=get_info_about_organizations("–û—Ç–µ–ª–∏"))
        bot.delete_message(user_message.chat.id, user_message.message_id - 2)
    # –º–µ–Ω—é —Ö–æ—Å—Ç–µ–ª—ã
    elif user_message.text == emoji.emojize('—Ö–æ—Å—Ç–µ–ª—ã :bed:'):
        markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        hotel = types.KeyboardButton(emoji.emojize('–≤—ã–≤–µ—Å—Ç–∏ —Ö–æ—Å—Ç–µ–ª'))
        change = types.KeyboardButton(emoji.emojize('–∑–∞–º–µ–Ω–∏—Ç—å —Ö–æ—Å—Ç–µ–ª'))
        add_fav = types.KeyboardButton(emoji.emojize('–¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ'))
        back = types.KeyboardButton('–≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        where_to_stay = types.KeyboardButton(emoji.emojize('–≥–¥–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è? :hotel:'))
        markup1.add(hotel, change, add_fav, where_to_stay, back)
        bot.send_message(user_message.chat.id,
                         "–≤—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é —Ö–æ—Å—Ç–µ–ª—ã", reply_markup=markup1)
    elif user_message.text == "–≤—ã–≤–µ—Å—Ç–∏ —Ö–æ—Å—Ç–µ–ª":
        text = get_info_about_organizations("—Ö–æ—Å—Ç–µ–ª—ã")
        bot.send_message(user_message.chat.id, text)
        write_info_to_file(text)
    elif user_message.text == "–¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ":
        my_file = open("mes.txt", "r")
        information = my_file.read()
        add_favourites(user_message.chat.id, information)
        bot.send_message(user_message.chat.id, text="–¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ")
    elif user_message.text == "–∑–∞–º–µ–Ω–∏—Ç—å —Ö–æ—Å—Ç–µ–ª":
        bot.delete_message(user_message.chat.id, user_message.message_id - 1)
        bot.send_message(user_message.chat.id, text=get_info_about_organizations("–•–æ—Å—Ç–µ–ª—ã"))
        bot.delete_message(user_message.chat.id, user_message.message_id - 2)

    # –º–µ–Ω—é –∫–∞—Ñ–µ
    elif user_message.text == emoji.emojize('–∫–∞—Ñ–µ :doughnut:'):
        markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        hotel = types.KeyboardButton(emoji.emojize('–≤—ã–≤–µ—Å—Ç–∏ –∫–∞—Ñ–µ'))
        change = types.KeyboardButton(emoji.emojize('–∑–∞–º–µ–Ω–∏—Ç—å –∫–∞—Ñ–µ'))
        add_fav = types.KeyboardButton(emoji.emojize('–¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ'))
        where_to_eat = types.KeyboardButton(emoji.emojize('–≥–¥–µ –ø–æ–µ—Å—Ç—å? :pot_of_food:'))
        back = types.KeyboardButton('–≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup1.add(hotel, change, add_fav, where_to_eat, back)
        bot.send_message(user_message.chat.id,
                         "–≤—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é –∫–∞—Ñ–µ", reply_markup=markup1)
    elif user_message.text == "–≤—ã–≤–µ—Å—Ç–∏ –∫–∞—Ñ–µ":
        text = get_info_about_organizations("–∫–∞—Ñ–µ")
        bot.send_message(user_message.chat.id, text)
        write_info_to_file(text)
    elif user_message.text == "–¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ":
        my_file = open("mes.txt", "r")
        information = my_file.read()
        add_favourites(user_message.chat.id, information)
        bot.send_message(user_message.chat.id, text="–¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ")
    elif user_message.text == "–∑–∞–º–µ–Ω–∏—Ç—å –∫–∞—Ñ–µ":
        bot.delete_message(user_message.chat.id, user_message.message_id - 1)
        bot.send_message(user_message.chat.id, text=get_info_about_organizations("–∫–∞—Ñ–µ"))
        bot.delete_message(user_message.chat.id, user_message.message_id - 2)

    # –º–µ–Ω—é —Ñ–∞—Å—Ç—Ñ—É–¥
    elif user_message.text == emoji.emojize('—Ñ–∞—Å—Ç—Ñ—É–¥ :hamburger:'):
        markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        hotel = types.KeyboardButton(emoji.emojize('–≤—ã–≤–µ—Å—Ç–∏ —Ñ–∞—Å—Ç—Ñ—É–¥'))
        change = types.KeyboardButton(emoji.emojize('–∑–∞–º–µ–Ω–∏—Ç—å —Ñ–∞—Å—Ç—Ñ—É–¥'))
        add_fav = types.KeyboardButton(emoji.emojize('–¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ'))
        where_to_eat = types.KeyboardButton(emoji.emojize('–≥–¥–µ –ø–æ–µ—Å—Ç—å? :pot_of_food:'))
        back = types.KeyboardButton('–≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup1.add(hotel, change, add_fav, where_to_eat, back)
        bot.send_message(user_message.chat.id,
                         "–≤—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é —Ñ–∞—Å—Ç—Ñ—É–¥", reply_markup=markup1)

    elif user_message.text == "–≤—ã–≤–µ—Å—Ç–∏ —Ñ–∞—Å—Ç—Ñ—É–¥":
        text = get_info_about_organizations("—Ñ–∞—Å—Ç—Ñ—É–¥")
        bot.send_message(user_message.chat.id, text)
        write_info_to_file(text)
    elif user_message.text == "–¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ":
        my_file = open("mes.txt", "r")
        information = my_file.read()
        add_favourites(user_message.chat.id, information)
        bot.send_message(user_message.chat.id, text="–¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ")
    elif user_message.text == "–∑–∞–º–µ–Ω–∏—Ç—å —Ñ–∞—Å—Ç—Ñ—É–¥":
        bot.delete_message(user_message.chat.id, user_message.message_id - 1)
        bot.send_message(user_message.chat.id, text=get_info_about_organizations("—Ñ–∞—Å—Ç—Ñ—É–¥"))
        bot.delete_message(user_message.chat.id, user_message.message_id - 2)

    # –º–µ–Ω—é —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã
    elif user_message.text == emoji.emojize('—Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã ü•ò'):
        markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        hotel = types.KeyboardButton(emoji.emojize('–≤—ã–≤–µ—Å—Ç–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω'))
        change = types.KeyboardButton(emoji.emojize('–∑–∞–º–µ–Ω–∏—Ç—å —Ä–µ—Å—Ç–æ—Ä–∞–Ω'))
        add_fav = types.KeyboardButton(emoji.emojize('–¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ'))
        where_to_eat = types.KeyboardButton(emoji.emojize('–≥–¥–µ –ø–æ–µ—Å—Ç—å? :pot_of_food:'))
        back = types.KeyboardButton('–≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup1.add(hotel, change, add_fav, where_to_eat, back)
        bot.send_message(user_message.chat.id,
                         "–≤—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã", reply_markup=markup1)
    elif user_message.text == "–≤—ã–≤–µ—Å—Ç–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω":
        text = get_info_about_organizations("—Ä–µ—Å—Ç–æ—Ä–∞–Ω")
        bot.send_message(user_message.chat.id, text)
        write_info_to_file(text)
    elif user_message.text == "–¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ":
        my_file = open("mes.txt", "r")
        information = my_file.read()
        add_favourites(user_message.chat.id, information)
        bot.send_message(user_message.chat.id, text="–¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ")
    elif user_message.text == "–∑–∞–º–µ–Ω–∏—Ç—å —Ä–µ—Å—Ç–æ—Ä–∞–Ω":
        bot.delete_message(user_message.chat.id, user_message.message_id - 1)
        bot.send_message(user_message.chat.id, text=get_info_about_organizations("—Ä–µ—Å—Ç–æ—Ä–∞–Ω"))
        bot.delete_message(user_message.chat.id, user_message.message_id - 2)

        # –º–µ–Ω—é –∞–∑–∏–∞—Ç—Å–∫–∞—è –∫—É—Ö–Ω—è
    elif user_message.text == emoji.emojize('–∞–∑–∏–∞—Ç—Å–∫–∞—è –∫—É—Ö–Ω—è üç±'):
        markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        hotel = types.KeyboardButton(emoji.emojize('–≤—ã–≤–µ—Å—Ç–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω –∞–∑–∏–∞—Ç—Å–∫–æ–π –∫—É—Ö–Ω–∏'))
        change = types.KeyboardButton(emoji.emojize('–∑–∞–º–µ–Ω–∏—Ç—å —Ä–µ—Å—Ç–æ—Ä–∞–Ω –∞–∑–∏–∞—Ç—Å–∫–æ–π –∫—É—Ö–Ω–∏'))
        add_fav = types.KeyboardButton(emoji.emojize('–¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ'))
        where_to_eat = types.KeyboardButton(emoji.emojize('–≥–¥–µ –ø–æ–µ—Å—Ç—å? :pot_of_food:'))
        back = types.KeyboardButton('–≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup1.add(hotel, change, add_fav, where_to_eat, back)
        bot.send_message(user_message.chat.id,
                         "–≤—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é –∞–∑–∏–∞—Ç—Å–∫–∞—è –∫—É—Ö–Ω—è", reply_markup=markup1)
    elif user_message.text == "–≤—ã–≤–µ—Å—Ç–∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω –∞–∑–∏–∞—Ç—Å–∫–æ–π –∫—É—Ö–Ω–∏":
        text = get_info_about_organizations("—Ä–µ—Å—Ç–æ—Ä–∞–Ω –∞–∑–∏–∞—Ç—Å–∫–æ–π –∫—É—Ö–Ω–∏")
        bot.send_message(user_message.chat.id, text)
        write_info_to_file(text)
    elif user_message.text == "–¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ":
        my_file = open("mes.txt", "r")
        information = my_file.read()
        add_favourites(user_message.chat.id, information)
        bot.send_message(user_message.chat.id, text="–¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ")
    elif user_message.text == "–∑–∞–º–µ–Ω–∏—Ç—å —Ä–µ—Å—Ç–æ—Ä–∞–Ω –∞–∑–∏–∞—Ç—Å–∫–æ–π –∫—É—Ö–Ω–∏":
        bot.delete_message(user_message.chat.id, user_message.message_id - 1)
        bot.send_message(user_message.chat.id, text=get_info_about_organizations("—Ä–µ—Å—Ç–æ—Ä–∞–Ω –∞–∑–∏–∞—Ç—Å–∫–æ–π –∫—É—Ö–Ω–∏"))
        bot.delete_message(user_message.chat.id, user_message.message_id - 2)
    # –º–µ–Ω—é —Ç–æ—Ä–≥–æ–≤—ã–µ —Ü–µ–Ω—Ç—Ä—ã
    elif user_message.text == emoji.emojize('—Ç–æ—Ä–≥–æ–≤—ã–µ —Ü–µ–Ω—Ç—Ä—ã:shopping_bags:'):
        markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        hotel = types.KeyboardButton(emoji.emojize('–≤—ã–≤–µ—Å—Ç–∏ —Ç–æ—Ä–≥–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä'))
        change = types.KeyboardButton(emoji.emojize('–∑–∞–º–µ–Ω–∏—Ç—å —Ç—Ü'))
        add_fav = types.KeyboardButton(emoji.emojize('–¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ'))
        back = types.KeyboardButton('–≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup1.add(hotel, change, add_fav, back)
        bot.send_message(user_message.chat.id,
                         "–≤—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –º–µ–Ω—é —Ç–æ—Ä–≥–æ–≤—ã–µ —Ü–µ–Ω—Ç—Ä—ã", reply_markup=markup1)
    elif user_message.text == "–≤—ã–≤–µ—Å—Ç–∏ —Ç–æ—Ä–≥–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä":
        text = get_info_about_organizations("—Ç–æ—Ä–≥–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä")
        bot.send_message(user_message.chat.id, text)
        write_info_to_file(text)
    elif user_message.text == "–¥–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ":
        my_file = open("mes.txt", "r")
        information = my_file.read()
        add_favourites(user_message.chat.id, information)
        bot.send_message(user_message.chat.id, text="–¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ")
    elif user_message.text == "–∑–∞–º–µ–Ω–∏—Ç—å —Ç—Ü":
        bot.delete_message(user_message.chat.id, user_message.message_id - 1)
        text=get_info_about_organizations("—Ç–æ—Ä–≥–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä")
        write_info_to_file(text)
        bot.send_message(user_message.chat.id, text)
        bot.delete_message(user_message.chat.id, user_message.message_id - 2)


    elif (user_message.text in churches) or (user_message.text != ""):
        try:
            text = get_info_of_sightsee(user_message.text)
            text1 = f'{text[0]}\n'
            url = text[1]
            web_site = text[2]
            text = text1 + f' –ø–æ–¥—Ä–æ–±–Ω–µ–µ : {web_site}'
            bot.send_photo(user_message.chat.id, url, text)

        except (Exception, Error) as error:
            print("Error", error)

    else:

        bot.send_message(user_message.chat.id, "—è —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é", parse_mode='html')


@bot.message_handler(content_types=['photo'])
def get_user_photo(message):
    bot.send_message(message.chat.id, "–í–ê–£, –∫—Ä—É—Ç–æ–µ —Ñ–æ—Ç–æ!", parse_mode='html')


bot.polling(none_stop=True)
